/**
 * Copyright 2018 The Coding with Chrome Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Blockly custom icons for the toolbox.
 *
 * @author mbordihn@google.com (Markus Bordihn)
 */


/**
 * Icons for the default toolbox
 */
.blocklyTreeRowItem_blocks__lists::before {
  content: 'list';
}

.blocklyTreeRowItem_logic::before,
.blocklyTreeRowItem_logik::before {
  content: 'call_split';
}

.blocklyTreeRowItem_loops::before,
.blocklyTreeRowItem_schleifen::before {
  content: 'loop';
}

.blocklyTreeRowItem_math::before,
.blocklyTreeRowItem_mathematik::before {
  content: 'iso';
}

.blocklyTreeRowItem_text::before {
  content: 'text_fields';
}

.blocklyTreeRowItem_colors::before,
.blocklyTreeRowItem_colour::before,
.blocklyTreeRowItem_farbe::before {
  content: 'palette';
}

.blocklyTreeRowItem_variables::before,
.blocklyTreeRowItem_variablen::before {
  content: 'attach_money';
}

.blocklyTreeRowItem_functions::before,
.blocklyTreeRowItem_funktionen::before {
  content: 'functions';
}

.blocklyTreeRowItem_steuerung::before,
.blocklyTreeRowItem_control::before {
  content: 'low_priority';
}

.blocklyTreeRowItem_anzeige::before,
.blocklyTreeRowItem_display::before {
  content: 'desktop_windows';
}


/**
 * Icons for specific categories inside the toolbox.
 */
.blocklyTreeRowItem_blocks_phaser__game::before {
  content: 'directions_run';
}

.blocklyTreeRowItem_blocks_phaser__preload::before {
  content: 'file_download';
}

.blocklyTreeRowItem_blocks_phaser__create::before {
  content: 'add_circle';
}

.blocklyTreeRowItem_blocks_phaser__input::before {
  content: 'keyboard';
}

.blocklyTreeRowItem_blocks_phaser__inputs::before {
  content: 'keyboard';
}

.blocklyTreeRowItem_blocks_phaser__update::before {
  content: 'repeat';
}

.blocklyTreeRowItem_blocks_phaser__renderer::before {
  content: 'computer';
}

.blocklyTreeRowItem_blocks_phaser__files::before {
  content: 'perm_media';
}

.blocklyTreeRowItem_blocks_phaser__example_files::before {
  content: 'insert_photo';
}

.blocklyTreeRowItem_blocks_phaser__audio::before {
  content: 'audiotrack';
}

.blocklyTreeRowItem_blocks_phaser__sprite::before {
  content: 'portrait';
}

.blocklyTreeRowItem_blocks_phaser__group::before {
  content: 'group_work';
}

.blocklyTreeRowItem_blocks_phaser__tile_sprite::before {
  content: 'burst_mode';
}

.blocklyTreeRowItem_blocks_phaser__physics_sprite::before {
  content: 'rotate_90_degrees_ccw';
}

.blocklyTreeRowItem_blocks_phaser__text::before {
  content: 'format_shapes';
}

.blocklyTreeRowItem_blocks_phaser__generator::before {
  content: 'extension';
}

.blocklyTreeRowItem_blocks_phaser__world::before {
  content: 'computer';
}

.blocklyTreeRowItem_attachments::before {
  content: 'rv_hookup';
}

.blocklyTreeRowItem_command::before {
  content: 'send';
}

.blocklyTreeRowItem_draw::before {
  content: 'brush';
}

.blocklyTreeRowItem_blocks_robot__events::before,
.blocklyTreeRowItem_events::before {
  content: 'input';
}

.blocklyTreeRowItem_general::before {
  content: 'folder';
}

.blocklyTreeRowItem_sounds::before {
  content: 'audiotrack';
}

.blocklyTreeRowItem_sensors::before {
  content: 'developer_board';
}

.blocklyTreeRowItem_blocks_robot__movements::before,
.blocklyTreeRowItem_movements::before {
  content: 'open_with';
}

.blocklyTreeRowItem_movements_advance::before {
  content: 'gamepad';
}

.blocklyTreeRowItem_robot_settings::before {
  content: 'settings_input_component';
}

.blocklyTreeRowItem_movements_vehicle::before {
  content: 'directions_car';
}

.blocklyTreeRowItem_blocks_robot__lights::before,
.blocklyTreeRowItem_lights::before {
  content: 'lightbulb_outline';
}
